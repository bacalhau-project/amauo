repos:
  # Python linting and formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.5.5
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        exclude: ^.github/workflows/
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-case-conflict
      - id: check-json
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-ast  # Verify Python syntax
      - id: check-docstring-first
      - id: name-tests-test
        args: ['--pytest-test-first']
      - id: fix-byte-order-marker
      - id: check-builtin-literals
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: detect-private-key
        exclude: ^tests/

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: .*\.lock$|package-lock\.json$|.*\.example$

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: ['--severity=warning']
        files: \.(sh|bash)$
        exclude: ^deployment-files/

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [-d, "{extends: relaxed, rules: {line-length: {max: 120}, comments: disable}}"]
        exclude: ^.github/workflows/

  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: ['-ll', '--skip', 'B101,B601']
        files: ^spot_deployer/
        exclude: ^tests/

  # Custom checks for this project
  - repo: local
    hooks:
      - id: smoke-test
        name: Run smoke tests
        entry: python scripts/smoke-test.py --quiet
        language: python
        pass_filenames: false
        always_run: true

      - id: check-no-files-dir
        name: Ensure no legacy files/ directory
        entry: bash -c '! test -d files/'
        language: system
        pass_filenames: false
        always_run: true

      - id: check-no-bacalhau-deployment
        name: Ensure no bacalhau-deployment/ directory
        entry: bash -c '! test -d bacalhau-deployment/'
        language: system
        pass_filenames: false
        always_run: true

      - id: python-no-print
        name: Check for print statements
        entry: bash -c '! grep -r "print(" spot_deployer/ --include="*.py" | grep -v "# noqa"'
        language: system
        pass_filenames: false
        files: ^spot_deployer/.*\.py$

      - id: check-aws-credentials
        name: Ensure no AWS credentials in code
        entry: bash -c '! grep -r "AKIA\|aws_access_key_id\|aws_secret_access_key" . --include="*.py" --include="*.yaml" --include="*.yml" --include="*.json" --exclude-dir=.git --exclude-dir=__pycache__'
        language: system
        pass_filenames: false

ci:
  skip: [shellcheck, smoke-test]  # These might not work in CI
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  submodules: false
