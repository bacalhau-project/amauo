name: CI

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Lint with ruff
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run tests
        run: |
          uv run pytest tests/ -v --tb=short

      - name: Run smoke tests
        run: |
          uv run python scripts/smoke-test.py

      - name: Test CLI commands
        run: |
          # Test help command
          uv run python -m spot_deployer help
          
          # Test version command
          uv run python -m spot_deployer --version
          
          # Test generate command
          mkdir -p test-project
          cd test-project
          uv run python -m spot_deployer generate
          
          # Test validate command
          uv run python -m spot_deployer validate

      - name: Test portable deployment
        run: |
          # Create test deployment structure
          cd test-deployment
          
          # Validate the test deployment
          uv run python -m spot_deployer validate
          
          # Test tarball creation
          echo "tarball_source: ." >> .spot/deployment.yaml
          uv run python -m spot_deployer validate

      - name: Run pre-commit hooks
        run: |
          uv run pre-commit run --all-files

  test-matrix:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up UV
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync

      - name: Run tests
        run: |
          uv run pytest tests/ -v

  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'