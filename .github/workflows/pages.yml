name: GitHub Pages

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  update-gh-pages:
    name: Update gh-pages branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true

    - name: Fetch all tags
      run: |
        git fetch --all --tags --force
        echo "Available tags:"
        git tag -l | sort -V

    - name: Setup Git
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

    - name: Determine tag
      id: get_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="${{ github.ref_name }}"
        fi
        echo "tag=${TAG}" >> $GITHUB_OUTPUT
        echo "Deploying tag: ${TAG}"

    - name: Checkout tag
      run: |
        git checkout ${{ steps.get_tag.outputs.tag }}

    - name: Create GitHub Pages content
      run: |
        mkdir -p docs
        echo '<!DOCTYPE html>' > docs/index.html
        echo '<html lang="en"><head><meta charset="UTF-8">' >> docs/index.html
        echo '<title>Amauo - AWS Spot Instance Deployment Tool</title>' >> docs/index.html
        echo '<style>body{font-family:-apple-system,BlinkMacSystemFont,"Segue UI",Roboto,sans-serif;max-width:800px;margin:0 auto;padding:2rem;line-height:1.6}.hero{text-align:center;margin-bottom:3rem}.install{background:#f6f8fa;padding:1.5rem;border-radius:8px;margin:2rem 0}code{background:#f6f8fa;padding:0.2rem 0.4rem;border-radius:4px}pre{background:#f6f8fa;padding:1rem;border-radius:8px}.links{display:flex;gap:1rem;justify-content:center;flex-wrap:wrap;margin-top:2rem}.link{text-decoration:none;background:#0366d6;color:white;padding:0.5rem 1rem;border-radius:4px}.version{color:#666;font-size:0.9rem}</style>' >> docs/index.html
        echo '</head><body><div class="hero"><h1>ðŸš€ Amauo</h1>' >> docs/index.html
        echo '<p>Deploy Bacalhau compute nodes globally with AWS spot instances</p>' >> docs/index.html
        echo '<p class="version">Version: ${{ steps.get_tag.outputs.tag }}</p></div>' >> docs/index.html
        echo '<div class="install"><h2>ðŸ“¦ Installation</h2>' >> docs/index.html
        echo '<p>Install from PyPI using uvx (recommended):</p>' >> docs/index.html
        echo '<pre><code>uvx amauo --help</code></pre>' >> docs/index.html
        echo '<p>Or install globally with pip:</p>' >> docs/index.html
        echo '<pre><code>pip install amauo</code></pre></div>' >> docs/index.html
        echo '<div class="install"><h2>ðŸš€ Quick Start</h2>' >> docs/index.html
        echo '<pre><code>amauo setup<br>amauo create<br>amauo list<br>amauo destroy</code></pre></div>' >> docs/index.html
        echo '<div class="links">' >> docs/index.html
        echo '<a href="https://github.com/bacalhau-project/amauo" class="link">GitHub Repository</a>' >> docs/index.html
        echo '<a href="https://pypi.org/project/amauo/" class="link">PyPI Package</a>' >> docs/index.html
        echo '<a href="https://github.com/bacalhau-project/amauo/blob/main/README.md" class="link">Documentation</a>' >> docs/index.html
        echo '</div></body></html>' >> docs/index.html

    - name: Create version file
      run: |
        echo "${{ steps.get_tag.outputs.tag }}" > docs/VERSION
        echo "Updated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")" >> docs/VERSION

        # Get all tags and show latest
        echo "" >> docs/VERSION
        echo "All versions:" >> docs/VERSION
        git tag -l | sort -V | tail -5 >> docs/VERSION

    - name: Copy files to temp directory
      run: |
        mkdir -p /tmp/gh-pages
        cp -r docs/* /tmp/gh-pages/

        # Remove any temporary files we don't need
        rm -f /tmp/gh-pages/placeholder.html /tmp/gh-pages/web.html

    - name: Checkout gh-pages branch
      run: |
        git checkout gh-pages || git checkout -b gh-pages
        git rm -rf . || true

    - name: Copy files from temp
      run: |
        cp -r /tmp/gh-pages/* .

    - name: Commit and push
      run: |
        git add -A
        git commit -m "Deploy version ${{ steps.get_tag.outputs.tag }} to GitHub Pages" || echo "No changes to commit"
        git push origin gh-pages --force

  trigger-pages-build:
    needs: update-gh-pages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write

    steps:
    - name: Trigger GitHub Pages build
      run: |
        # GitHub Pages will automatically build and deploy when gh-pages branch is updated
        # This job just ensures the previous job completed successfully
        echo "GitHub Pages deployment triggered by update to gh-pages branch"
        echo "Check https://github.com/${{ github.repository }}/settings/pages for deployment status"
