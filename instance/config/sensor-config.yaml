# Sensor Simulator Configuration for Bacalhau Demo
# Optimized for AWS spot instances with distributed sensor simulation
# Version 2 configuration with full monitoring and dynamic reloading

# Configuration version
version: 2

# Database configuration
database:
  path: "/app/data/sensor_data.db"
  backup_enabled: true                     # Enable periodic backups
  backup_interval_hours: 12                # Backup twice daily
  max_backups: 3                          # Keep 3 backups for spot instances
  preserve_existing_db: false             # Start fresh on each deployment
  max_size_mb: 500                        # Limit database size for demo

# Logging configuration
logging:
  level: "INFO"
  file: "/app/logs/sensor_simulator.log"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  console_output: true
  max_file_size_mb: 50
  backup_count: 3

# Random location generation settings
random_location:
  enabled: true                           # Use with node identity system
  gps_variation: 5                        # Small GPS variation in meters
  city_count: 50                          # Use major US cities
  filter_by: "population"
  min_population: 100000                  # Focus on larger cities
  max_population: 10000000
  exclude_countries: []
  include_countries: ["USA"]              # US deployment only

# Simulation parameters
simulation:
  readings_per_second: 2                  # Moderate rate for demo purposes
  run_time_seconds: 86400                 # 24 hours for demo, can be restarted
  start_delay_seconds: 5                  # Short delay after service start

# Replica configuration for sensor identification
replicas:
  count: 1                                # Single sensor per instance
  prefix: "SPOT-SENSOR"                   # Identify as spot instance sensor
  start_index: 1

# Normal sensor parameters with realistic environmental data
normal_parameters:
  temperature:
    mean: 22.0                            # Room temperature in Celsius
    std_dev: 1.5                          # Realistic variation
    min: 18.0                             # Minimum reasonable temperature
    max: 26.0                             # Maximum reasonable temperature
  humidity:
    mean: 50.0                            # Comfortable humidity percentage
    std_dev: 10.0                         # Normal variation
    min: 20.0                             # Dry conditions
    max: 80.0                             # Humid conditions
  pressure:
    mean: 101325.0                        # Standard atmospheric pressure in Pascals
    std_dev: 500.0                        # Weather variation
    min: 99000.0                          # Low pressure system
    max: 103000.0                         # High pressure system
  vibration:
    mean: 1.2                             # Light vibration for city environment
    std_dev: 0.3                          # Normal variation
    min: 0.5                              # Minimum detectable vibration
    max: 3.0                              # Maximum from city traffic/buildings
  voltage:
    mean: 24.0                            # Standard sensor power supply
    std_dev: 0.2                          # Normal power variation
    min: 23.0                             # Minimum operating voltage
    max: 25.0                             # Maximum safe voltage

# Anomaly generation settings for realistic demo
anomalies:
  enabled: true                           # Enable anomalies for realistic demo
  probability: 0.05                       # 5% chance of anomalies
  types:
    spike:
      enabled: true
      weight: 0.35                        # 35% of anomalies
      severity_factor: 2.0                # Double the normal value
    trend:
      enabled: true
      weight: 0.25                        # 25% of anomalies
      duration_seconds: 300               # 5-minute trends
      rate_change: 0.1                    # Gradual change
    pattern:
      enabled: true
      weight: 0.15                        # 15% of anomalies
      duration_seconds: 600               # 10-minute patterns
      frequency: 0.1                      # Oscillation frequency
    missing_data:
      enabled: true
      weight: 0.15                        # 15% of anomalies
      duration_seconds: 30                # Brief outages
    noise:
      enabled: true
      weight: 0.10                        # 10% of anomalies
      duration_seconds: 120               # 2-minute noise periods
      noise_multiplier: 2.5               # Increased noise level

# Monitoring server configuration (REQUIRED for version 2)
monitoring:
  enabled: true                           # Enable HTTP monitoring server
  host: "0.0.0.0"                        # Listen on all interfaces
  port: 8080                             # Standard monitoring port
  metrics_interval_seconds: 60           # Update metrics every minute
  health_check_path: "/health"           # Health check endpoint
  metrics_path: "/metrics"               # Metrics endpoint
  enable_prometheus: true                # Enable Prometheus metrics

# Dynamic configuration reloading (REQUIRED for version 2)
dynamic_reloading:
  enabled: true                          # Enable dynamic config reloading
  check_interval_seconds: 10             # Check for changes every 10 seconds
  reload_on_change: true                 # Automatically reload on changes
  validate_before_reload: true           # Validate config before applying

