#cloud-config

users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINFUxJyYOV4crJxJk/UW3gLvCANAD/y1uwDZtmbduKcc daaronch@M1-Max.local
    groups: docker

package_update: true
package_upgrade: true
packages:
  - docker.io
  - docker-compose-plugin
  - python3
  - python3-pip
  - wget
  - curl
  - jq

write_files:
  - path: /opt/startup.log
    content: |
      Cloud-init started at $(date)
    owner: ubuntu:ubuntu
    permissions: "0644"

  - path: /opt/wait_for_deployment.sh
    content: |
      #!/bin/bash
      set -e

      echo "[$(date)] Waiting for deployment bundle..." | tee -a /opt/startup.log

      # Create directories
      mkdir -p /opt/uploaded_files
      mkdir -p /bacalhau_node /bacalhau_data
      mkdir -p /opt/sensor/{config,data,logs,exports}
      chown -R ubuntu:ubuntu /opt/uploaded_files /bacalhau_node /bacalhau_data /opt/sensor

      # Wait for deployment bundle with timeout
      WAIT_FILE="/opt/deployment-bundle.tar.gz"
      TIMEOUT=600  # 10 minutes
      ELAPSED=0

      while [ ! -f "$WAIT_FILE" ] && [ $ELAPSED -lt $TIMEOUT ]; do
          echo "[$(date)] Waiting for $WAIT_FILE... ($ELAPSED/$TIMEOUT seconds)" | tee -a /opt/startup.log
          sleep 10
          ELAPSED=$((ELAPSED + 10))
      done

      if [ ! -f "$WAIT_FILE" ]; then
          echo "[$(date)] ERROR: Timeout waiting for deployment bundle!" | tee -a /opt/startup.log
          exit 1
      fi

      echo "[$(date)] Deployment bundle received! Extracting..." | tee -a /opt/startup.log

      # Extract bundle
      cd /opt/uploaded_files
      tar -xzf "$WAIT_FILE"

      # Write orchestrator credentials
      echo "nats://hch03d1vtvqqur.us1.cloud.expanso.io:4222" > /opt/uploaded_files/orchestrator_endpoint
      echo "GVqCNQKWUi76eP99ivfTbpyBP8zTCCuNKutHEmLDpUacMcYgwJF7ZuN6gRsq5Hur" > /opt/uploaded_files/orchestrator_token
      chmod 600 /opt/uploaded_files/orchestrator_token

      # Fix permissions
      chown -R ubuntu:ubuntu /opt/uploaded_files
      chmod +x /opt/uploaded_files/scripts/*.sh 2>/dev/null || true
      chmod +x /opt/uploaded_files/scripts/*.py 2>/dev/null || true

      # Install systemd services
      cp /opt/uploaded_files/scripts/*.service /etc/systemd/system/
      systemctl daemon-reload

      # Create a marker file to indicate extraction is complete
      touch /opt/deployment-ready

      echo "[$(date)] Extraction complete. Starting services..." | tee -a /opt/startup.log

      # Start the main service
      systemctl enable bacalhau-startup.service
      systemctl start bacalhau-startup.service

      echo "[$(date)] Services started. Rebooting in 30 seconds..." | tee -a /opt/startup.log

      # Schedule reboot to ensure clean start
      shutdown -r +0.5 "Deployment complete, rebooting for clean start"
    owner: root:root
    permissions: "0755"

  - path: /etc/systemd/system/wait-deployment.service
    content: |
      [Unit]
      Description=Wait for deployment bundle and bootstrap
      After=network-online.target cloud-init.target
      Wants=network-online.target

      [Service]
      Type=oneshot
      ExecStart=/opt/wait_for_deployment.sh
      RemainAfterExit=yes
      StandardOutput=journal+console
      StandardError=journal+console

      [Install]
      WantedBy=multi-user.target
    owner: root:root
    permissions: "0644"

runcmd:
  - systemctl daemon-reload
  - systemctl enable wait-deployment.service
  - systemctl start wait-deployment.service
